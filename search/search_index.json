{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Homelab DevOps Overview","text":"<p> Golden Path \u2014 lint \u2192 plan \u2192 approve \u2192 apply \u2192 configure \u2192 smoke across AWS &amp; homelab (Proxmox/NFS). Built with Terraform \u00b7 Ansible \u00b7 Docker \u00b7 GitHub Actions \u00b7 Jenkins \u00b7 MkDocs.</p> <p> </p>"},{"location":"#pipeline-at-a-glance","title":"Pipeline at a glance","text":"<p>```mermaid flowchart TD   A[Developer Laptop] --&gt;|Git Push| B[GitHub Actions / Jenkins]   B --&gt;|Static Checks| C[pre-commit \u00b7 TFLint \u00b7 Checkov \u00b7 Ansible-lint \u00b7 Hadolint]   B --&gt;|Plan| D[Terraform Plan]   D --&gt;|Manual Gate| E[Approve]   E --&gt;|Apply| F[Terraform Apply]   F --&gt;|Configure| G[Ansible Playbooks]   G --&gt;|Deploy/Proxy| H[Docker Reverse Proxy]   F --&gt;|Alt Target| I[Proxmox VM + NFS]   G --&gt;|Smoke Tests| J[Health Checks]</p>"},{"location":"README-site-notes/","title":"Docs","text":"<p>Planned diagram of workflow (Terraform \u2192 Ansible \u2192 Docker \u2192 CI).</p>"},{"location":"architecture/","title":"Architecture","text":"<pre><code>flowchart LR\n  Dev[Dev Laptop] --&gt;|git push| CI[CI (GitHub Actions/Jenkins)]\n  CI --&gt; Lint[Static checks\\npre-commit \u00b7 TFLint \u00b7 Checkov \u00b7 Ansible-lint \u00b7 Hadolint]\n  CI --&gt; Plan[Terraform Plan]\n  Plan --&gt;|manual gate| Approve[Approve]\n  Approve --&gt; Apply[Terraform Apply]\n  Apply --&gt; AWS[AWS: EC2/SG/VPC]\n  Apply --&gt; Proxmox[Proxmox VM]\n  Proxmox --&gt; NFS[NFS (45Drives)]\n  Apply --&gt; DNS[DNS/Records]\n  AWS --&gt; Ansible[Ansible Config]\n  Proxmox --&gt; Ansible\n  Ansible --&gt; App[Reverse Proxy + App (Docker)]\n  App --&gt; Smoke[Smoke tests/health checks]\n</code></pre>"},{"location":"hire-me/","title":"Hire Me","text":"<p>Stephon \u201cSkip\u201d Skipper \u2014 Linux/DevOps Engineer</p> <ul> <li>3+ yrs Linux sysadmin \u00b7 IaC (Terraform/Ansible) \u00b7 CI/CD (Jenkins/GitHub Actions)  </li> <li>Homelab: Proxmox cluster, NFS, Docker, Wazuh, Grafana</li> <li>Focus: security baselines, automation, reliability</li> </ul> <p>Highlights - Zero-SSH EC2 (IMDSv2, encrypted volumes, SSM access only) - Automated IaC scans (TFLint, Checkov, Hadolint, ansible-lint) - Live docs and reproducible demos</p> <p>Contact - GitHub: iso-st3ph - Email: stephon@ayoskip.info </p>"},{"location":"pipelines/","title":"Pipelines","text":"<p>Flow: lint \u2192 plan \u2192 approve \u2192 apply \u2192 configure \u2192 smoke</p> <ul> <li>Lint: pre-commit (TFLint, Checkov, Ansible-lint, Hadolint)</li> <li>Plan/Apply: Terraform with remote backend (planned)</li> <li>Configure: Ansible targets AWS/Proxmox from TF outputs</li> <li>Deploy: Reverse proxy + sample app</li> <li>Smoke: curl healthchecks (non-200 fails the job)</li> </ul>"},{"location":"projects/","title":"Projects","text":""},{"location":"projects/#terraform-ec2-minimal-module","title":"Terraform: EC2 Minimal Module","text":"<ul> <li>Opinionated tags, keypair, security group.</li> <li>Outputs feed Ansible inventory.</li> <li>Code: <code>terraform/modules/ec2_minimal/</code></li> <li>Try it: <code>terraform/examples/ec2_minimal/</code></li> </ul>"},{"location":"projects/#ansible-nginxhardening-role","title":"Ansible: Nginx/Hardening role","text":"<ul> <li>Idempotent tasks, handler notifications, Molecule-ready layout.</li> <li>Playbook: <code>ansible/site.yml</code></li> <li>Role: <code>ansible/roles/secure/</code></li> </ul>"},{"location":"projects/#docker-reverse-proxy-demo","title":"Docker: Reverse Proxy Demo","text":"<ul> <li><code>docker-compose.yml</code> with a <code>whoami</code> app behind the proxy.</li> <li>Healthchecks + simple smoke script.</li> <li>Folder: <code>docker/reverse-proxy/</code></li> </ul>"},{"location":"projects/#cicd","title":"CI/CD","text":"<ul> <li>Pre-commit: fmt/validate + yamllint.</li> <li>(Optional) GitHub Actions <code>docs.yml</code> to auto-publish MkDocs.</li> <li>Jenkinsfile mirrors IaC workflow with a manual gate.</li> </ul>"}]}